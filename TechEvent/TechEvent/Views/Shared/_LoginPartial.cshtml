@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link" href="#" id="navbardrop" data-toggle="dropdown">@UserManager.GetUserName(User)<i class="fas fa-caret-down"></i></a>

            <div class="dropdown-menu bg-dark">
                <nav class="navbar">
                    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
                    </form>
                </nav>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item dropdown">
            <a class="nav-link" href="#" id="navbardrop" data-toggle="dropdown">Login<i class="fas fa-caret-down"></i></a>

            <div class="dropdown-menu bg-dark">
                <nav class="navbar">
                    <ul class=" btn-group-vertical" style="list-style-type:none;padding:0;">
                        <li class="nav-item">
                            <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </li>
    }
</ul>
